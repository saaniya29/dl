import numpy as np
import matplotlib.pyplot as plt
np.random.seed(42)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)
X_mod = X + np.random.normal(0, 0.1, X.shape)
y_mod = y + np.random.normal(0, 0.1, y.shape)
def gradient_descent(X, y, lr=0.1, n_iter=1000):
    X_b = np.c_[np.ones((len(y), 1)), X]
    theta = np.random.randn(2, 1)
    for _ in range(n_iter):
        gradients = 2/len(y) * X_b.T.dot(X_b.dot(theta) - y)
        theta -= lr * gradients
    return theta
theta = gradient_descent(X, y)
theta_mod = gradient_descent(X_mod, y_mod)
plt.figure()
plt.subplot(1, 2, 1)
plt.scatter(X, y, color='blue')
plt.plot(X, X.dot(theta[1:]) + theta[0], color='red')
plt.title('Actual Data')
plt.subplot(1, 2, 2)
plt.scatter(X_mod, y_mod, color='green')
plt.plot(X_mod, X_mod.dot(theta_mod[1:]) + theta_mod[0], color='red')
plt.title('Modified Data')
plt.show()
