import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import Perceptron
np.random.seed(42)
X = np.vstack((np.random.randn(50, 2) + [2, 2], np.random.randn(50, 2) + [-2, -2]))
y = np.hstack((np.ones(50), np.zeros(50)))
model = Perceptron()
model.fit(X, y)
plt.scatter(X[y == 1][:, 0], X[y == 1][:, 1], color='blue', label='Class 1')
plt.scatter(X[y == 0][:, 0], X[y == 0][:, 1], color='red', label='Class 0')
x_vals = np.linspace(-4, 4, 100)
y_vals = -(model.coef_[0][0] * x_vals + model.intercept_) / model.coef_[0][1]
plt.plot(x_vals, y_vals, color='green', label='Decision Boundary')
plt.title('Linear Separability Demonstration')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.show()
